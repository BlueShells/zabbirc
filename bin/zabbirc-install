#!/usr/bin/env ruby

case ARGV.size
when 0
  install_path = Dir.pwd
when 1
  install_path = ARGV[0]
when 2
  puts "Too many arguments"
  exit 1
end

require 'zabbirc'
require 'pry'

def chown_directory dir
  puts "Using sudo to chown directory `#{dir}`"
  system "sudo chown #{Process.uid}:#{Process.gid} #{dir}"
end

begin
  unless Dir.exists? Zabbirc::LIB_DATA_DIR
    puts "Using sudo to create lib directory #{Zabbirc::LIB_DATA_DIR}"
    r = system "sudo mkdir #{Zabbirc::LIB_DATA_DIR}"
    if r
      puts "Runtime directory #{Zabbirc::LIB_DATA_DIR} created"
      chown_directory Zabbirc::LIB_DATA_DIR
    else
      puts "Could not create runtime directory #{Zabbirc::LIB_DATA_DIR}"
      puts "Please create this directory and check if it's accesible by user, that will run zabbirc bot"
    end
  end

  # Test if runtime directory is accessible
  f = File.open(Zabbirc::LIB_DATA_DIR.join("test"), "w")
  f.puts "test"
  f.close
  FileUtils.rm f.path
rescue Errno::EACCES
  unless chown_directory Zabbirc::LIB_DATA_DIR
    puts "Could not make runtime directory `#{Zabbirc::LIB_DATA_DIR}` accessible"
  end
end

puts "Installing config file into: #{install_path}"
templates_path = Pathname.new(File.expand_path(Pathname.new(File.dirname(__FILE__)).join("../templates")))

FileUtils.cp(templates_path.join("zabbirc_config.rb"), install_path)
puts "Installed"
